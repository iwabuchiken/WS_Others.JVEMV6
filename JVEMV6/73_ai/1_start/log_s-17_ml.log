 
============================  
[s_17_ml.py:104] sklerarn-related imports => done

[s_17_ml.py:158] starting : main() (time=20210502_164116)

[s_17_ml.py:190] time => 0.000 sec

[s_17_ml.py:218] exec_prog => done

[s_17_ml.py:253] all done
 
============================  
[s_17_ml.py:104] sklerarn-related imports => done

[s_17_ml.py:156] starting : main() (time=20210502_164502)

[s_17_ml.py:188] time => 0.000 sec

[s_17_ml.py:216] exec_prog => done

[s_17_ml.py:251] all done
 
============================  
[s_17_ml.py:104] sklerarn-related imports => done

[s_17_ml.py:171] starting : main() (time=20210502_164713)

Dataset Length:  625
Dataset Shape:  (625, 5)
Dataset:     0  1  2  3  4
0  B  1  1  1  1
1  R  1  1  1  2
2  R  1  1  1  3
3  R  1  1  1  4
4  R  1  1  1  5
[s_17_ml.py:188] importdata ==> comp.

[s_17_ml.py:213] time => 2.184 sec

[s_17_ml.py:241] exec_prog => done

[s_17_ml.py:276] all done
 
============================  
[s_17_ml.py:104] sklerarn-related imports => done

[s_17_ml.py:172] starting : main() (time=20210502_165638)

Dataset Length:  625
Dataset Shape:  (625, 5)
Dataset (first 3 rows): 
    0  1  2  3  4
0  B  1  1  1  1
1  R  1  1  1  2
2  R  1  1  1  3
[s_17_ml.py:189] importdata ==> comp.

[s_17_ml.py:214] time => 1.607 sec

[s_17_ml.py:242] exec_prog => done

[s_17_ml.py:277] all done
 
============================  
[s_17_ml.py:104] sklerarn-related imports => done

[s_17_ml.py:202] starting : main() (time=20210502_170455)

Dataset Length:  625
Dataset Shape:  (625, 5)
Dataset:     0  1  2  3  4
0  B  1  1  1  1
1  R  1  1  1  2
2  R  1  1  1  3
3  R  1  1  1  4
4  R  1  1  1  5
[s_17_ml.py:219] importdata ==> comp.

[s_17_ml.py:253] time => 1.654 sec

[s_17_ml.py:281] exec_prog => done

[s_17_ml.py:316] all done
 
============================  
[s_17_ml.py:104] sklerarn-related imports => done

[s_17_ml.py:213] starting : main() (time=20210502_171003)

Dataset Length:  625
Dataset Shape:  (625, 5)
Dataset:     0  1  2  3  4
0  B  1  1  1  1
1  R  1  1  1  2
2  R  1  1  1  3
3  R  1  1  1  4
4  R  1  1  1  5
[s_17_ml.py:230] importdata ==> comp.

[s_17_ml.py:180] balance_data.dtypes ==>
0    object
1     int64
2     int64
3     int64
4     int64
dtype: object

[s_17_ml.py:264] time => 1.638 sec

[s_17_ml.py:292] exec_prog => done

[s_17_ml.py:327] all done
 
============================  
[s_17_ml.py:104] sklerarn-related imports => done

[s_17_ml.py:218] starting : main() (time=20210503_155442)

Dataset Length:  625
Dataset Shape:  (625, 5)
Dataset:     0  1  2  3  4
0  B  1  1  1  1
1  R  1  1  1  2
2  R  1  1  1  3
3  R  1  1  1  4
4  R  1  1  1  5
[s_17_ml.py:235] importdata ==> comp.

[s_17_ml.py:180] balance_data.dtypes ==>
0    object
1     int64
2     int64
3     int64
4     int64
dtype: object

[s_17_ml.py:270] time => 3.370 sec

[s_17_ml.py:298] exec_prog => done

[s_17_ml.py:333] all done
 
============================  
[s_17_ml.py:104] sklerarn-related imports => done

[s_17_ml.py:218] starting : main() (time=20210503_160054)

Dataset Length:  625
Dataset Shape:  (625, 5)
Dataset:     0  1  2  3  4
0  B  1  1  1  1
1  R  1  1  1  2
2  R  1  1  1  3
3  R  1  1  1  4
4  R  1  1  1  5
[s_17_ml.py:235] importdata ==> comp.

[s_17_ml.py:180] balance_data.dtypes ==>
0    object
1     int64
2     int64
3     int64
4     int64
dtype: object

[s_17_ml.py:250] type(X) ==>
<class 'numpy.ndarray'>

[s_17_ml.py:279] time => 2.356 sec

[s_17_ml.py:307] exec_prog => done

[s_17_ml.py:342] all done
 
============================  
[s_17_ml.py:104] sklerarn-related imports => done

[s_17_ml.py:218] starting : main() (time=20210503_160600)

Dataset Length:  625
Dataset Shape:  (625, 5)
Dataset:     0  1  2  3  4
0  B  1  1  1  1
1  R  1  1  1  2
2  R  1  1  1  3
3  R  1  1  1  4
4  R  1  1  1  5
[s_17_ml.py:235] importdata ==> comp.

[s_17_ml.py:180] balance_data.dtypes ==>
0    object
1     int64
2     int64
3     int64
4     int64
dtype: object

[s_17_ml.py:251] type(X) ==>
<class 'numpy.ndarray'>

[s_17_ml.py:261] X.shape ==>
(625, 4)

[s_17_ml.py:290] time => 2.886 sec

[s_17_ml.py:318] exec_prog => done

[s_17_ml.py:353] all done
 
============================  
[s_17_ml.py:104] sklerarn-related imports => done

[s_17_ml.py:218] starting : main() (time=20210503_162250)

Dataset Length:  625
Dataset Shape:  (625, 5)
Dataset:     0  1  2  3  4
0  B  1  1  1  1
1  R  1  1  1  2
2  R  1  1  1  3
3  R  1  1  1  4
4  R  1  1  1  5
[s_17_ml.py:235] importdata ==> comp.

[s_17_ml.py:180] balance_data.dtypes ==>
0    object
1     int64
2     int64
3     int64
4     int64
dtype: object

[s_17_ml.py:251] type(X) ==>
<class 'numpy.ndarray'>

[s_17_ml.py:261] X.shape ==>
(625, 4)

[s_17_ml.py:272] X[:3] ==>
[[1 1 1 1]
 [1 1 1 2]
 [1 1 1 3]]

[s_17_ml.py:301] time => 2.090 sec

[s_17_ml.py:329] exec_prog => done

[s_17_ml.py:364] all done
 
============================  
[s_17_ml.py:104] sklerarn-related imports => done

[s_17_ml.py:218] starting : main() (time=20210503_162657)

Dataset Length:  625
Dataset Shape:  (625, 5)
Dataset:     0  1  2  3  4
0  B  1  1  1  1
1  R  1  1  1  2
2  R  1  1  1  3
3  R  1  1  1  4
4  R  1  1  1  5
[s_17_ml.py:235] importdata ==> comp.

[s_17_ml.py:180] balance_data.dtypes ==>
0    object
1     int64
2     int64
3     int64
4     int64
dtype: object

[s_17_ml.py:251] type(X) ==>
<class 'numpy.ndarray'>

[s_17_ml.py:261] X.shape ==>
(625, 4)

[s_17_ml.py:273] X[:3] ==>
[[1 1 1 1]
 [1 1 1 2]
 [1 1 1 3]]

[s_17_ml.py:289] clf_gini ==>
DecisionTreeClassifier(class_weight=None, criterion='gini', max_depth=3,
            max_features=None, max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=5, min_samples_split=2,
            min_weight_fraction_leaf=0.0, presort=False, random_state=100,
            splitter='best')

[s_17_ml.py:317] time => 2.044 sec

[s_17_ml.py:345] exec_prog => done

[s_17_ml.py:380] all done
 
============================  
[s_17_ml.py:104] sklerarn-related imports => done

[s_17_ml.py:231] starting : main() (time=20210503_163129)

Dataset Length:  625
Dataset Shape:  (625, 5)
Dataset:     0  1  2  3  4
0  B  1  1  1  1
1  R  1  1  1  2
2  R  1  1  1  3
3  R  1  1  1  4
4  R  1  1  1  5
[s_17_ml.py:248] importdata ==> comp.

[s_17_ml.py:193] balance_data.dtypes ==>
0    object
1     int64
2     int64
3     int64
4     int64
dtype: object

[s_17_ml.py:264] type(X) ==>
<class 'numpy.ndarray'>

[s_17_ml.py:274] X.shape ==>
(625, 4)

[s_17_ml.py:286] X[:3] ==>
[[1 1 1 1]
 [1 1 1 2]
 [1 1 1 3]]

[s_17_ml.py:302] clf_gini ==>
DecisionTreeClassifier(class_weight=None, criterion='gini', max_depth=3,
            max_features=None, max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=5, min_samples_split=2,
            min_weight_fraction_leaf=0.0, presort=False, random_state=100,
            splitter='best')

[s_17_ml.py:316] clf_entropy ==>
DecisionTreeClassifier(class_weight=None, criterion='entropy', max_depth=3,
            max_features=None, max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=5, min_samples_split=2,
            min_weight_fraction_leaf=0.0, presort=False, random_state=100,
            splitter='best')

[s_17_ml.py:342] time => 1.778 sec

[s_17_ml.py:370] exec_prog => done

[s_17_ml.py:405] all done
 
============================  
[s_17_ml.py:107] sklerarn-related imports => comp. (tree, too)

[s_17_ml.py:236] starting : main() (time=20210503_163940)

Dataset Length:  625
Dataset Shape:  (625, 5)
Dataset:     0  1  2  3  4
0  B  1  1  1  1
1  R  1  1  1  2
2  R  1  1  1  3
3  R  1  1  1  4
4  R  1  1  1  5
[s_17_ml.py:253] importdata ==> comp.

[s_17_ml.py:198] balance_data.dtypes ==>
0    object
1     int64
2     int64
3     int64
4     int64
dtype: object

[s_17_ml.py:269] type(X) ==>
<class 'numpy.ndarray'>

[s_17_ml.py:279] X.shape ==>
(625, 4)

[s_17_ml.py:291] X[:3] ==>
[[1 1 1 1]
 [1 1 1 2]
 [1 1 1 3]]

[s_17_ml.py:307] clf_gini ==>
DecisionTreeClassifier(class_weight=None, criterion='gini', max_depth=3,
            max_features=None, max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=5, min_samples_split=2,
            min_weight_fraction_leaf=0.0, presort=False, random_state=100,
            splitter='best')

[s_17_ml.py:321] clf_entropy ==>
DecisionTreeClassifier(class_weight=None, criterion='entropy', max_depth=3,
            max_features=None, max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=5, min_samples_split=2,
            min_weight_fraction_leaf=0.0, presort=False, random_state=100,
            splitter='best')

[s_17_ml.py:347] time => 2.059 sec

[s_17_ml.py:375] exec_prog => done

[s_17_ml.py:410] all done
 
============================  
[s_17_ml.py:107] sklerarn-related imports => comp. (tree, too)

[s_17_ml.py:236] starting : main() (time=20210503_164423)

Dataset Length:  625
Dataset Shape:  (625, 5)
Dataset:     0  1  2  3  4
0  B  1  1  1  1
1  R  1  1  1  2
2  R  1  1  1  3
3  R  1  1  1  4
4  R  1  1  1  5
[s_17_ml.py:253] importdata ==> comp.

[s_17_ml.py:198] balance_data.dtypes ==>
0    object
1     int64
2     int64
3     int64
4     int64
dtype: object

[s_17_ml.py:269] type(X) ==>
<class 'numpy.ndarray'>

[s_17_ml.py:279] X.shape ==>
(625, 4)

[s_17_ml.py:291] X[:3] ==>
[[1 1 1 1]
 [1 1 1 2]
 [1 1 1 3]]

[s_17_ml.py:307] clf_gini ==>
DecisionTreeClassifier(class_weight=None, criterion='gini', max_depth=3,
            max_features=None, max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=5, min_samples_split=2,
            min_weight_fraction_leaf=0.0, presort=False, random_state=100,
            splitter='best')

[s_17_ml.py:321] clf_entropy ==>
DecisionTreeClassifier(class_weight=None, criterion='entropy', max_depth=3,
            max_features=None, max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=5, min_samples_split=2,
            min_weight_fraction_leaf=0.0, presort=False, random_state=100,
            splitter='best')

[s_17_ml.py:338] export_graphviz ==> comp

[s_17_ml.py:365] time => 1.747 sec

[s_17_ml.py:393] exec_prog => done

[s_17_ml.py:428] all done
 
============================  
[s_17_ml.py:107] sklerarn-related imports => comp. (tree, too)

[s_17_ml.py:236] starting : main() (time=20210503_165220)

Dataset Length:  625
Dataset Shape:  (625, 5)
Dataset:     0  1  2  3  4
0  B  1  1  1  1
1  R  1  1  1  2
2  R  1  1  1  3
3  R  1  1  1  4
4  R  1  1  1  5
[s_17_ml.py:253] importdata ==> comp.

[s_17_ml.py:198] balance_data.dtypes ==>
0    object
1     int64
2     int64
3     int64
4     int64
dtype: object

[s_17_ml.py:269] type(X) ==>
<class 'numpy.ndarray'>

[s_17_ml.py:279] X.shape ==>
(625, 4)

[s_17_ml.py:291] X[:3] ==>
[[1 1 1 1]
 [1 1 1 2]
 [1 1 1 3]]

[s_17_ml.py:307] clf_gini ==>
DecisionTreeClassifier(class_weight=None, criterion='gini', max_depth=3,
            max_features=None, max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=5, min_samples_split=2,
            min_weight_fraction_leaf=0.0, presort=False, random_state=100,
            splitter='best')

[s_17_ml.py:321] clf_entropy ==>
DecisionTreeClassifier(class_weight=None, criterion='entropy', max_depth=3,
            max_features=None, max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=5, min_samples_split=2,
            min_weight_fraction_leaf=0.0, presort=False, random_state=100,
            splitter='best')

[s_17_ml.py:338] export_graphviz ==> comp

[s_17_ml.py:363] decisiontree png file ==> comp : ./data/s-18\decisiontree.20210503_165222.png

[s_17_ml.py:390] time => 5.725 sec

[s_17_ml.py:418] exec_prog => done

[s_17_ml.py:453] all done
 
============================  
[s_17_ml.py:107] sklerarn-related imports => comp. (tree, too)

[s_17_ml.py:236] starting : main() (time=20210503_170021)

Dataset Length:  625
Dataset Shape:  (625, 5)
Dataset:     0  1  2  3  4
0  B  1  1  1  1
1  R  1  1  1  2
2  R  1  1  1  3
3  R  1  1  1  4
4  R  1  1  1  5
[s_17_ml.py:253] importdata ==> comp.

[s_17_ml.py:198] balance_data.dtypes ==>
0    object
1     int64
2     int64
3     int64
4     int64
dtype: object

[s_17_ml.py:269] type(X) ==>
<class 'numpy.ndarray'>

[s_17_ml.py:279] X.shape ==>
(625, 4)

[s_17_ml.py:291] X[:3] ==>
[[1 1 1 1]
 [1 1 1 2]
 [1 1 1 3]]

[s_17_ml.py:307] clf_gini ==>
DecisionTreeClassifier(class_weight=None, criterion='gini', max_depth=3,
            max_features=None, max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=5, min_samples_split=2,
            min_weight_fraction_leaf=0.0, presort=False, random_state=100,
            splitter='best')

[s_17_ml.py:321] clf_entropy ==>
DecisionTreeClassifier(class_weight=None, criterion='entropy', max_depth=3,
            max_features=None, max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=5, min_samples_split=2,
            min_weight_fraction_leaf=0.0, presort=False, random_state=100,
            splitter='best')

[s_17_ml.py:338] export_graphviz ==> comp

[s_17_ml.py:363] decisiontree png file ==> comp : ./data/s-18\decisiontree.20210503_170023.png

[s_17_ml.py:379] export_graphviz (clf_entropy) ==> comp

[s_17_ml.py:402] decisiontree png file ==> comp : ./data/s-18\decisiontree.20210503_170023.[clf_entropy].png

[s_17_ml.py:429] time => 2.231 sec

[s_17_ml.py:457] exec_prog => done

[s_17_ml.py:492] all done
 
============================  
[s_17_ml.py:107] sklerarn-related imports => comp. (tree, too)

[s_17_ml.py:236] starting : main() (time=20210503_170140)

Dataset Length:  625
Dataset Shape:  (625, 5)
Dataset:     0  1  2  3  4
0  B  1  1  1  1
1  R  1  1  1  2
2  R  1  1  1  3
3  R  1  1  1  4
4  R  1  1  1  5
[s_17_ml.py:253] importdata ==> comp.

[s_17_ml.py:198] balance_data.dtypes ==>
0    object
1     int64
2     int64
3     int64
4     int64
dtype: object

[s_17_ml.py:269] type(X) ==>
<class 'numpy.ndarray'>

[s_17_ml.py:279] X.shape ==>
(625, 4)

[s_17_ml.py:291] X[:3] ==>
[[1 1 1 1]
 [1 1 1 2]
 [1 1 1 3]]

[s_17_ml.py:307] clf_gini ==>
DecisionTreeClassifier(class_weight=None, criterion='gini', max_depth=3,
            max_features=None, max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=5, min_samples_split=2,
            min_weight_fraction_leaf=0.0, presort=False, random_state=100,
            splitter='best')

[s_17_ml.py:321] clf_entropy ==>
DecisionTreeClassifier(class_weight=None, criterion='entropy', max_depth=3,
            max_features=None, max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=5, min_samples_split=2,
            min_weight_fraction_leaf=0.0, presort=False, random_state=100,
            splitter='best')

[s_17_ml.py:338] export_graphviz ==> comp

[s_17_ml.py:363] decisiontree png file ==> comp : ./data/s-18\decisiontree.20210503_170141.png

[s_17_ml.py:379] export_graphviz (clf_entropy) ==> comp

[s_17_ml.py:402] decisiontree png file ==> comp : ./data/s-18\decisiontree.20210503_170142.[clf_entropy].png

[s_17_ml.py:429] time => 2.262 sec

[s_17_ml.py:457] exec_prog => done

[s_17_ml.py:492] all done
 
============================  
